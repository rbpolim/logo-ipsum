generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Profile {
  id       String  @id @default(cuid())
  userId   String  @unique
  name     String
  imageUrl String
  email    String
  role     ROLE    @default(USER)
  register String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id              String       @id @default(cuid())
  number          Int          @unique @default(autoincrement())
  userId          String
  startDate       DateTime
  expectedEndDate DateTime?
  endDate         DateTime?
  requester       String
  purpose         String
  location        String
  status          ORDER_STATUS @default(IN_PROGRESS)

  companyId String
  company   Company @relation(fields: [companyId], references: [id])

  reports Report[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([companyId])
}

model Company {
  id     String @id @default(cuid())
  userId String
  name   String
  unit   String

  orders Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Report {
  id     String        @id @default(cuid())
  number Int           @unique @default(autoincrement())
  userId String
  status REPORT_STATUS @default(IN_PROGRESS)

  orderId String
  order   Order  @relation(fields: [orderId], references: [id])

  schedule  ReportSchedule?
  equipment ReportEquipment?
  service   ReportService?
  gallery   ReportGallery[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId])
}

model ReportSchedule {
  id        String   @id @default(cuid())
  date      DateTime
  startTime String
  endTime   String?

  reportId String @unique
  report   Report @relation(fields: [reportId], references: [id])

  @@index([reportId])
}

model ReportEquipment {
  id          String @id @default(cuid())
  location    String
  name        String
  model       String
  serial      String
  tag         String
  type        String
  description String

  reportId String @unique
  report   Report @relation(fields: [reportId], references: [id])
}

model ReportService {
  id             String @id @default(cuid())
  diagnostic     String
  recommendation String
  additionalInfo String

  procedures   ServiceProcedure[]
  descriptions ServiceDescription[]

  reportId String @unique
  report   Report @relation(fields: [reportId], references: [id])
}

model ServiceProcedure {
  id          String @id @default(cuid())
  description String

  serviceId String
  service   ReportService @relation(fields: [serviceId], references: [id])

  @@index([serviceId])
}

model ServiceDescription {
  id          String @id @default(cuid())
  description String

  serviceId String
  service   ReportService @relation(fields: [serviceId], references: [id])

  @@index([serviceId])
}

model ReportGallery {
  id       String @id @default(cuid())
  imageUrl String
  comment  String

  reportId String
  report   Report @relation(fields: [reportId], references: [id])

  @@index([reportId])
}

enum ROLE {
  ADMIN
  TECHNICIAN
  USER
}

enum ORDER_STATUS {
  IN_PROGRESS
  WAITING_APPROVAL_POLL
  FINISHED
  CANCELED
}

enum REPORT_STATUS {
  IN_PROGRESS
  FINISHED
  CANCELED
}
